#!/usr/bin/perl

use strict;
use warnings;
use Term::ANSIColor;

sub encrypt {
    my @chars = (
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
        "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
        "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "\"", "#", "\$", "%", "&", "'", "(", ")", "{", "}", "[", "]", "+", "-", "*", "¬",
        "/", "\\", ".", ",", ":", ";", "<", "=", ">", "!", "?", "_", "|", "§", "~", " ",
        "‖", "•", "‣", "※", "⁂", "⁋", "⁕", "₧", "₪", "₯", "ℇ", "ℋ", "ℌ", "ℒ", "ℜ", "℞",
        "Ω", "ℨ", "℩", "ℬ", "ℵ", "ℹ", "ℼ", "ℽ", "ℿ", "⅀", "⅌", "⅏", "⅐", "⅑", "⅔", "⅞",
        "←", "↑", "→", "↓", "↖", "↗", "↘", "↙", "⇒", "∂", "∅", "∇", "∈", "∎"
    );

    # Generate a string of characters with random dim shades of green
    my $out = join("", map { "\e[32m" . $chars[rand @chars] } 1..$_[0]);
    return $out;
}

printf("%s", encrypt($ARGV[0]));
